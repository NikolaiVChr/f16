<?xml version="1.0"?>

<!-- General Dynamics F-16 Autoflight System -->
<!-- Copyright (c) 2019 Joshua Davidson (Octal450) -->

<system name="F-16: Autoflight">
	
	<channel name="Autoflight: Interface"> <!-- For differences in block versions -->
		
		<switch name="autoflight/switch-roll-min"> <!-- Allow STRG SEL on Block 20+ only -->
			<default value="-1"/>
			<test value="0">
				/sim/variant-id lt 4
			</test>
		</switch>
		
		<switch name="autoflight/switch-roll">
			<default value="/f16/fcs/switch-roll-block20"/>
			<test value="/f16/fcs/switch-roll-block15">
				/sim/variant-id lt 4
			</test>
			<clipto>
				<min>autoflight/switch-roll-min</min>
				<max>1</max>
			</clipto>
		</switch>
		
		<switch name="autoflight/switch-pitch"> <!-- /f16/fcs/autopilot-on is ignored on Block 20+ -->
			<default value="0"/>
			<test logic="AND" value="/f16/fcs/switch-pitch-block20">
				/sim/variant-id ge 4
			</test>
			<test logic="AND" value="-1">
				/sim/variant-id lt 4
				/f16/fcs/autopilot-on eq 1
				/f16/fcs/switch-pitch-block15 eq 0
			</test>
			<test logic="AND" value="1">
				/sim/variant-id lt 4
				/f16/fcs/autopilot-on eq 1
				/f16/fcs/switch-pitch-block15 eq 1
			</test>
		</switch>
	
	</channel>
	
	<channel name="Autoflight: Logic">
		
		<switch name="position/wow">
			<default value="0"/>
			<test logic="OR" value="1">
				gear/unit[0]/WOW eq 1
				gear/unit[1]/WOW eq 1
				gear/unit[2]/WOW eq 1
			</test>
		</switch>
		
		<switch name="autoflight/can-engage">
			<default value="1"/>
			<test logic="OR" value="0"> <!-- Add conditions where AP fails here -->
				position/wow eq 1
				attitude/roll-rad gt 1.0472
				attitude/roll-rad lt -1.0472
				attitude/pitch-rad lt -1.0472
				attitude/pitch-rad gt 1.0472
				elec/bus/emergency-dc-2 lt 20
			</test>
		</switch>
		
		<fcs_function name="autoflight/ss/delay">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						150  0.50
						320  0.35
						600  0.11
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<lag_filter name="autoflight/ss/roll-input">
			<input>fcs/fly-by-wire/roll/stick-force-lbf</input>
			<c1>25.6</c1>
		</lag_filter>
		
		<lag_filter name="autoflight/ss/pitch-input">
			<input>fcs/fly-by-wire/pitch/stick-force-lbf</input>
			<c1>25.6</c1>
		</lag_filter>
		
		<lag_filter name="autoflight/ss/yaw-input">
			<input>fcs/fly-by-wire/yaw/pedal-force-lbf</input>
			<c1>25.6</c1>
		</lag_filter>
		
		<switch name="autoflight/ss/force">
			<default value="0"/>
			<test logic="OR" value="1">
				autoflight/ss/roll-input gt 1.2
				autoflight/ss/roll-input lt -1.2
				autoflight/ss/pitch-input gt 1.8
				autoflight/ss/pitch-input lt -1.8
				autoflight/ss/yaw-input gt 8
				autoflight/ss/yaw-input lt -8
			</test>
		</switch>
		
		<switch name="autoflight/ss/reset-time">
			<default value="/sim/time/elapsed-sec"/>
			<test value="autoflight/ss/reset-time">
				autoflight/ss/force eq 0
			</test>
		</switch>
		
		<summer name="autoflight/ss/reset-time-delay">
			<input>autoflight/ss/reset-time</input>
			<input>autoflight/ss/delay</input>
		</summer>
		
		<switch name="autoflight/ss/active">
			<default value="0"/>
			<test value="1">
				/sim/time/elapsed-sec lt autoflight/ss/reset-time-delay
			</test>
		</switch>
		
		<switch name="autoflight/output/roll-master">
			<default value="0"/>
			<test logic="AND" value="1"> <!-- autoflight/switch-pitch is not a typo -->
				autoflight/switch-pitch ne 0
				autoflight/can-engage eq 1
				autoflight/ss/force eq 0
				position/wow eq 0
			</test>
		</switch>
		
		<switch name="autoflight/output/pitch-master">
			<default value="0"/>
			<test logic="AND" value="1">
				autoflight/switch-pitch ne 0
				autoflight/can-engage eq 1
				autoflight/ss/force eq 0
				position/wow eq 0
			</test>
		</switch>
	
	</channel>
	
	<channel name="Autoflight: Drivers">
		
		<!-- Bank Limit Stuff -->
		<fcs_function name="autoflight/roll/max-bank-deg">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						125  20
						200  30
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/max-bank-deg-trigger">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						125  19.99
						350  29.99
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<pure_gain name="autoflight/roll/min-bank-deg-trigger">
			<input>autoflight/roll/max-bank-deg-trigger</input>
			<gain>-1.0</gain>
		</pure_gain>
		
		<pure_gain name="autoflight/roll/max-bank-rad">
			<input>autoflight/roll/max-bank-deg</input>
			<gain>0.0174533</gain> <!-- DEG to RAD -->
		</pure_gain>
		
		<!-- HDG SEL / STRG SEL -->
		<fcs_function name="autoflight/roll/hdg-hold-target">
			<function>
				<integer>
					<sum>
						<ifthen>
							<and>
								<eq>
									<property>autoflight/output/roll-master</property>
									<value>1</value>
								</eq>
								<eq>
									<property>autoflight/switch-roll</property>
									<value>1</value>
								</eq>
							</and>
							<property>autoflight/roll/hdg-hold-target</property>
							<property>/orientation/heading-magnetic-deg</property>
						</ifthen>
						<value>0.5</value> <!-- Make the integer rounded correctly -->
					</sum>
				</integer>
			</function>
		</fcs_function>
		
		<switch name="autoflight/roll/gain-switch">
			<default value="1"/>
			<test logic="AND" value="0">
				autoflight/output/roll-master eq 1
				autoflight/switch-roll ne 0
			</test>
		</switch>
		
		<fcs_function name="autoflight/roll/heading/p-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">autoflight/roll/gain-switch</independentVar>
					<tableData>
						     0    1  
						200  1.8  0.0
						600  3.7  0.0
						950  4.1  0.0
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/heading/i-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">autoflight/roll/gain-switch</independentVar>
					<tableData>
						     0      1  
						250  0.005  0.000
						600  1.100  0.000
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<switch name="autoflight/roll/heading/trigger">
			<default value="0"/>
			<test logic="OR" value="-1">
				autoflight/roll/gain-switch eq 1
				autoflight/roll/no-rte-strg-sel eq 1
			</test>
			<test logic="OR" value="1">
				autoflight/roll/heading/pi le autoflight/roll/min-bank-deg-trigger
				autoflight/roll/heading/pi ge autoflight/roll/max-bank-deg-trigger
			</test>
		</switch>
		
		<pid name="autoflight/roll/heading/pi-v">
			<input>autoflight/roll/heading-error-deg</input>
			<kp>autoflight/roll/heading/p-gain</kp>
			<ki>autoflight/roll/heading/i-gain</ki>
			<kd>0.0</kd>
			<trigger>autoflight/roll/heading/trigger</trigger>
			<clipto>
				<min>-autoflight/roll/max-bank-deg</min>
				<max>autoflight/roll/max-bank-deg</max>
			</clipto>
			<output>autoflight/roll/heading/pi</output>
		</pid>
		
		<!-- ALT HOLD --> <!-- Note to self: Due to FBW's annoying downward limit of 0.5, we have do some ungood stuff to make it work -->
		<fcs_function name="autoflight/pitch/alt/predicted-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						200 -6.0
						600 -7.5
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/pitch/alt/predicted">
			<function>
				<sum>
					<quotient>
						<property>/instrumentation/gps/indicated-vertical-speed</property>
						<product>
							<property>autoflight/pitch/alt/predicted-gain</property>
							<value>-1</value>
						</product>
					</quotient>
					<property>/instrumentation/altimeter/indicated-altitude-ft</property>
				</sum>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/pitch/alt/target">
			<function>
				<product>
					<integer>
						<quotient>
							<sum>
								<ifthen>
									<and>
										<eq>
											<property>autoflight/output/pitch-master</property>
											<value>1</value>
										</eq>
										<eq>
											<property>autoflight/switch-pitch</property>
											<value>1</value>
										</eq>
									</and>
									<property>autoflight/pitch/alt/target</property>
									<property>autoflight/pitch/alt/predicted</property>
								</ifthen>
								<value>50</value> <!-- Make the integer rounded correctly -->
							</sum>
							<value>100</value>
						</quotient>
					</integer>
					<value>100</value>
				</product>
			</function>
			<clipto>
				<min>0</min>
				<max>70000</max>
			</clipto>
		</fcs_function>
		
		<summer name="autoflight/pitch/alt/error">
			<input>/instrumentation/altimeter/indicated-altitude-ft</input>
			<input>-autoflight/pitch/alt/target</input>
		</summer>
		
		<pure_gain name="autoflight/pitch/vs/target">
			<input>autoflight/pitch/alt/error</input>
			<gain>-7</gain>
			<clipto>
				<min>-3000</min>
				<max>3000</max>
			</clipto>
		</pure_gain>
	
	</channel>
	
	<channel name="Autoflight: Roll Channel">
		
		<switch name="autoflight/roll/att-hold-active">
			<default value="0"/>
			<test logic="AND" value="1">
				autoflight/output/roll-master eq 1
				autoflight/switch-roll eq 0
			</test>
		</switch>
		
		<switch name="autoflight/roll/att-hold-switch">
			<default value="autoflight/roll/att-hold-switch"/>
			<test logic="OR" value="0">
				autoflight/roll/att-hold-active ne 1
				autoflight/ss/active eq 1
			</test>
			<test logic="AND" value="1">
				velocities/p-rad_sec gt -0.0174533
				velocities/p-rad_sec lt 0.0174533
			</test>
		</switch>
		
		<fcs_function name="autoflight/roll/roll-hold-target">
			<function>
				<ifthen>
					<and>
						<eq>
							<property>autoflight/roll/att-hold-active</property>
							<value>1</value>
						</eq>
						<eq>
							<property>autoflight/roll/att-hold-switch</property>
							<value>1</value>
						</eq>
					</and>
					<property>autoflight/roll/roll-hold-target</property>
					<property>attitude/roll-rad</property>
				</ifthen>
			</function>
			<clipto>
				<min>-autoflight/roll/max-bank-rad</min>
				<max>autoflight/roll/max-bank-rad</max>
			</clipto>
		</fcs_function>
		
		<switch name="autoflight/roll/target-roll-deg">
			<default value="/orientation/roll-deg"/>
			<test logic="AND" value="autoflight/roll/heading/pi">
				autoflight/output/roll-master eq 1
				autoflight/switch-roll ne 0
			</test>
		</switch>
		
		<fcs_function name="autoflight/roll/roll-cmd-target">
			<function>
				<ifthen>
					<and>
						<eq>
							<property>autoflight/output/roll-master</property>
							<value>1</value>
						</eq>
						<nq>
							<property>autoflight/switch-roll</property>
							<value>0</value>
						</nq>
					</and>
					<toradians> <!-- It's easier to tune for target degree than target radian -->
						<property>autoflight/roll/target-roll-deg</property>
					</toradians>
					<property>attitude/roll-rad</property>
				</ifthen>
			</function>
		</fcs_function>
		
		<switch name="autoflight/roll/roll-rad-input">
			<default value="attitude/roll-rad"/>
			<test logic="AND" value="autoflight/roll/roll-cmd-target">
				autoflight/output/roll-master eq 1
				autoflight/switch-roll ne 0
			</test>
			<test value="autoflight/roll/roll-hold-target">
				autoflight/roll/att-hold-active eq 1
			</test>
			<clipto>
				<min>-1.0472</min>
				<max>1.0472</max>
			</clipto>
		</switch>
		
		<summer name="autoflight/roll/roll-rad-error">
			<input>attitude/roll-rad</input>
			<input>-autoflight/roll/roll-rad-input</input>
		</summer>
		
		<pure_gain name="autoflight/roll/roll-rate-p"> <!-- Calculate optimum roll rate -->
			<input>autoflight/roll/roll-rad-error</input>
			<gain>-2.5</gain>
			<clipto>
				<min>-0.349066</min>
				<max>0.349066</max>
			</clipto>
		</pure_gain>
		
		<fcs_function name="autoflight/roll/p-rad_sec">
			<function>
				<toradians>
					<property>/orientation/roll-rate-degps</property>
				</toradians>
			</function>
		</fcs_function>
		
		<summer name="autoflight/roll/roll-rate-error">
			<input>autoflight/roll/p-rad_sec</input>
			<input>-autoflight/roll/roll-rate-p</input>
			<clipto>
				<min>-0.349066</min>
				<max>0.349066</max>
			</clipto>
		</summer>
		
		<fcs_function name="autoflight/roll/p-gain-att">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						150 -8.0
						320 -4.0
						600 -3.0
						850 -2.0
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/i-gain-att">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						150 -12.0
						320  -7.0
						600  -6.0
						850  -4.0
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/roll/d-gain-att">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						150 -0.15
						320 -0.10
						600 -0.08
						850 -0.02
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<switch name="autoflight/roll/p-gain">
			<default value="0"/>
			<test logic="AND" value="autoflight/roll/p-gain-att">
				autoflight/output/roll-master eq 1
			</test>
		</switch>
		
		<switch name="autoflight/roll/i-gain"> 
			<default value="0"/>
			<test logic="AND" value="autoflight/roll/i-gain-att">
				autoflight/output/roll-master eq 1
			</test>
		</switch>
		
		<switch name="autoflight/roll/d-gain">
			<default value="0"/>
			<test logic="AND" value="autoflight/roll/d-gain-att">
				autoflight/output/roll-master eq 1
			</test>
		</switch>
		
		<switch name="autoflight/roll/trigger">
			<default value="0"/>
			<test value="-1">
				autoflight/output/roll-master ne 1
			</test>
			<test logic="OR" value="1">
				autoflight/roll/master-pid le -0.348556
				autoflight/roll/master-pid ge 0.348556
			</test>
		</switch>
		
		<pid name="autoflight/roll/master-pid-v"> <!-- Drive the FBW Rate to acheive optimum roll rate -->
			<input>autoflight/roll/roll-rate-error</input> <!-- Using PID because 0 rate-demand doesn't always equal 0 roll rate in the F-16 -->
			<kp>autoflight/roll/p-gain</kp>
			<ki>autoflight/roll/i-gain</ki>
			<kd>autoflight/roll/d-gain</kd>
			<trigger>autoflight/roll/trigger</trigger>
			<clipto>
				<min>-0.349066</min>
				<max>0.349066</max>
			</clipto>
			<output>autoflight/roll/master-pid</output>
		</pid>
		
		<fcs_function name="autoflight/roll/roll-rate-deg">
			<function>
				<todegrees>
					<property>autoflight/roll/master-pid</property>
				</todegrees>
			</function>
		</fcs_function>
		
		<switch name="autoflight/roll/roll-rate-demand">
			<default value="0"/>
			<test logic="AND" value="autoflight/roll/roll-rate-deg">
				autoflight/output/roll-master eq 1
			</test>
			<clipto>
				<min>-20</min>
				<max>20</max>
			</clipto>
		</switch>
	
	</channel>
	
	<channel name="Autoflight: Pitch Channel">
		
		<switch name="autoflight/pitch/att-hold-active">
			<default value="0"/>
			<test logic="AND" value="1">
				autoflight/output/pitch-master eq 1
				autoflight/switch-pitch eq -1
			</test>
		</switch>
		
		<switch name="autoflight/pitch/att-hold-switch">
			<default value="autoflight/pitch/att-hold-switch"/>
			<test logic="OR" value="0">
				autoflight/pitch/att-hold-active ne 1
				autoflight/ss/active eq 1
			</test>
			<test logic="AND" value="1">
				velocities/q-rad_sec gt -0.0174533
				velocities/q-rad_sec lt 0.0174533
			</test>
		</switch>
		
		<fcs_function name="autoflight/pitch/pitch-hold-target">
			<function>
				<ifthen>
					<and>
						<eq>
							<property>autoflight/pitch/att-hold-active</property>
							<value>1</value>
						</eq>
						<eq>
							<property>autoflight/pitch/att-hold-switch</property>
							<value>1</value>
						</eq>
					</and>
					<property>autoflight/pitch/pitch-hold-target</property>
					<property>attitude/pitch-rad</property>
				</ifthen>
			</function>
		</fcs_function>
		
		<switch name="autoflight/pitch/target-pitch-deg">
			<default value="/orientation/pitch-deg"/>
			<test logic="AND" value="autoflight/pitch/vs/pid">
				autoflight/output/pitch-master eq 1
				autoflight/switch-pitch eq 1
			</test>
		</switch>
		
		<fcs_function name="autoflight/pitch/pitch-cmd-target">
			<function>
				<ifthen>
					<and>
						<eq>
							<property>autoflight/output/pitch-master</property>
							<value>1</value>
						</eq>
						<eq>
							<property>autoflight/switch-pitch</property>
							<value>1</value>
						</eq>
					</and>
					<toradians> <!-- It's easier to tune for target degree than target radian -->
						<property>autoflight/pitch/target-pitch-deg</property>
					</toradians>
					<property>attitude/pitch-rad</property>
				</ifthen>
			</function>
		</fcs_function>
		
		<switch name="autoflight/pitch/pitch-rad-input">
			<default value="attitude/pitch-rad"/>
			<test logic="AND" value="autoflight/pitch/pitch-cmd-target">
				autoflight/output/pitch-master eq 1
				autoflight/switch-pitch eq 1
			</test>
			<test value="autoflight/pitch/pitch-hold-target">
				autoflight/pitch/att-hold-active eq 1
			</test>
			<clipto>
				<min>-1.0472</min>
				<max>1.0472</max>
			</clipto>
		</switch>
		
		<summer name="autoflight/pitch/pitch-rad-error">
			<input>attitude/pitch-rad</input>
			<input>-autoflight/pitch/pitch-rad-input</input>
		</summer>
		
		<pure_gain name="autoflight/pitch/pitch-rate-p"> <!-- Calculate optimum pitch rate -->
			<input>autoflight/pitch/pitch-rad-error</input>
			<gain>-1.5</gain>
			<clipto>
				<min>-0.174533</min>
				<max>0.174533</max>
			</clipto>
		</pure_gain>
		
		<fcs_function name="autoflight/pitch/thetadot-rad_sec">
			<function>
				<toradians>
					<property>/orientation/pitch-rate-degps</property>
				</toradians>
			</function>
		</fcs_function>
		
		<summer name="autoflight/pitch/pitch-rate-error">
			<input>autoflight/pitch/thetadot-rad_sec</input>
			<input>-autoflight/pitch/pitch-rate-p</input>
			<clipto>
				<min>-0.174533</min>
				<max>0.174533</max>
			</clipto>
		</summer>
		
		<!-- P and I probably need to be scheduled to make it more precise, but that causes problems right now with FBW, for now set by f16-base.xml -->
		<!--fcs_function name="autoflight/pitch/p-gain-att">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="autoflight/pitch/i-gain-att">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						
					</tableData>
				</table>
			</function>
		</fcs_function-->
		
		<fcs_function name="autoflight/pitch/d-gain-att">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<tableData>
						150 -10
						320  -7
						600  -4
						850  -2
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<switch name="autoflight/pitch/p-gain">
			<default value="0"/>
			<test logic="AND" value="autoflight/pitch/p-gain-att">
				autoflight/output/pitch-master eq 1
			</test>
		</switch>
		
		<switch name="autoflight/pitch/i-gain"> 
			<default value="0"/>
			<test logic="AND" value="autoflight/pitch/i-gain-att">
				autoflight/output/pitch-master eq 1
			</test>
		</switch>
		
		<switch name="autoflight/pitch/d-gain">
			<default value="0"/>
			<test logic="AND" value="autoflight/pitch/d-gain-att">
				autoflight/output/pitch-master eq 1
			</test>
		</switch>
		
		<switch name="autoflight/pitch/trigger">
			<default value="0"/>
			<test logic="OR" value="-1">
				autoflight/output/pitch-master ne 1
			</test>
			<test logic="OR" value="1">
				autoflight/pitch/master-pid le -0.499
				autoflight/pitch/master-pid ge 0.999
			</test>
		</switch>
		
		<pid name="autoflight/pitch/master-pid-v"> <!-- Drive the FBW G to null pitch error -->
			<input>autoflight/pitch/pitch-rate-error</input>
			<kp>autoflight/pitch/p-gain</kp>
			<ki>autoflight/pitch/i-gain</ki>
			<kd>autoflight/pitch/d-gain</kd>
			<trigger>autoflight/pitch/trigger</trigger>
			<clipto>
				<min>-0.5</min> <!-- 0.5 G -->
				<max>1.0</max> <!-- 2.0 G -->
			</clipto>
			<output>autoflight/pitch/master-pid</output>
		</pid>
		
		<fcs_function name="autoflight/pitch/g-demand"> <!-- Offset the G demand for rolling, better then integrating -->
			<function>
				<sum>
					<property>autoflight/pitch/master-pid</property>
					<quotient>
						<value>1</value>
						<cos>
							<property>attitude/roll-rad</property>
						</cos>
					</quotient>
					<value>-1</value>
				</sum>
			</function>
			<clipto>
				<min>-0.5</min> <!-- 0.5 G -->
				<max>1.0</max> <!-- 2.0 G -->
			</clipto>
		</fcs_function>
		
		<switch name="autoflight/pitch/g-demand-switched">
			<default value="0"/>
			<test logic="AND" value="autoflight/pitch/g-demand">
				autoflight/output/pitch-master eq 1
			</test>
			<clipto>
				<min>-0.5</min> <!-- 0.5 G -->
				<max>1.0</max> <!-- 2.0 G -->
			</clipto>
		</switch>
	
	</channel>

</system>